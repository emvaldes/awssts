name: GitHub Actions - AWS STS Generate Credentials
## on: [push]
on:
####----------------------------------------------------------------------------
  workflow_dispatch:
    name: 'Manual Deployment'
    description: 'Triggering Manual Deployment'
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Generate Credentials'
####----------------------------------------------------------------------------
  push:
    branches: [ master ]
    paths: 
      - action.yaml
####----------------------------------------------------------------------------
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_DEFAULT_ACCOUNT }}
  AWS_DEFAULT_REGION: 'us-east-1'
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DEVOPS_ACCESS_ROLE: 'DevOps--Custom-Access.Role'
  DEVOPS_ACCOUNT_NAME: deployment
  awscli_download: 'awscli.amazonaws.com'
  awscli_package: "awscli-exe-linux-x86_64.zip"
####----------------------------------------------------------------------------
jobs:
  generate-credentials:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
####----------------------------------------------------------------------------
      ## System Requirements
      - name: System Requirements
        uses: emvaldes/system-requirements@master
        id: system-requirements
        with:
          install-awscli-tool: true
          install-custom-tools: 'netcat'
          install-default-tools: true
          install-terraform-cli: false
          update-operating-system: true
          update-python-version: true
        continue-on-error: false
      - name: Check On Failures
        if: steps.system-requirements.outputs.status == 'failure'
        run: |
          echo -e "Warning: System Requirements Failed [Status]: ${{ steps.system-requirements.outputs.status }}" ;
####----------------------------------------------------------------------------
      ## Installed Packages
      - name: Installed Packages
        id: installed-packages
        shell: bash
        run: |
          jq --version;
          tree --version;
          terraform --version;
####----------------------------------------------------------------------------
      - name: AWS STS Assume Role
        uses: ./
        id: request_credentials
        with:
          aws-access-key-id: ${AWS_ACCESS_KEY_ID}
          aws-default-account: ${AWS_DEFAULT_ACCOUNT}
          aws-default-region: ${AWS_DEFAULT_REGION}
          aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
          devops-access-role: ${DEVOPS_ACCESS_ROLE}
          devops-account-name: ${DEVOPS_ACCOUNT_NAME}
          session-timestamp: 'DevOpsPipeline--20200827193000'
        continue-on-error: false
      - name: Check On Failures
        if: steps.request_credentials.outputs.status == 'failure'
        run: |
          echo -e "Warning: Request Credentials Failed [Status]: ${{ steps.request_credentials.outputs.status }}" ;
####----------------------------------------------------------------------------
      ## Display Environment
      - name: Display Environment
        id: display-environment
        run: |
          echo -e "Displaying Enviroment Settings ..." ;
          echo -e "AWS Access Key-ID: ${AWS_ACCESS_KEY_ID}" ;
          echo -e "AWS Secret Access Key: ${AWS_SECRET_ACCESS_KEY}" ;
          echo -e "AWS Session Token: ${AWS_SESSION_TOKEN}" ;
####----------------------------------------------------------------------------
      ## Display IAM List-Users
      - name: Display IAM List-Users
        id: display-listusers
        run: |
          aws --profile default \
          --region us-east-1 \
          iam list-users \
          --query 'Users[?UserName==`deployment`]' ;
        continue-on-error: false
      - name: Check On Failures
        if: steps.display-listusers.outputs.status == 'failure'
        run: |
          echo -e "Warning: Credentials Validation Failed [Status]: ${{ steps.display-listusers.outputs.status }}" ;
